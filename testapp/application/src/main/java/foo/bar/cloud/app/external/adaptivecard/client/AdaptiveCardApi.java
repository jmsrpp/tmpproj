
package foo.bar.cloud.app.external.adaptivecard.client;

import com.sap.cloud.sdk.services.openapi.core.OpenApiRequestException;
import com.sap.cloud.sdk.services.openapi.core.OpenApiResponse;
import com.sap.cloud.sdk.services.openapi.core.AbstractOpenApiService;
import com.sap.cloud.sdk.services.openapi.apiclient.ApiClient;

import foo.bar.cloud.app.external.adaptivecard.model.PostAdaptiveCardRequest; //NOPMD

import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;

import org.springframework.util.LinkedMultiValueMap;
import org.springframework.util.MultiValueMap;
import org.springframework.web.util.UriComponentsBuilder;
import org.springframework.core.ParameterizedTypeReference;
import org.springframework.core.io.FileSystemResource;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import com.google.common.annotations.Beta;

import com.sap.cloud.sdk.cloudplatform.connectivity.HttpDestinationProperties;

/**
 * ZOA Adaptive Card in version 1.0.0.
 *
 * No description provided (generated by Openapi Generator
 * https://github.com/openapitools/openapi-generator)
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class AdaptiveCardApi extends AbstractOpenApiService {
    /**
     * Instantiates this API class to invoke operations on the ZOA Adaptive Card.
     *
     * @param httpDestination The destination that API should be used with
     */
    public AdaptiveCardApi(@Nonnull final HttpDestinationProperties httpDestination) {
        super(httpDestination);
    }

    /**
     * Instantiates this API class to invoke operations on the ZOA Adaptive Card
     * based on a given {@link ApiClient}.
     *
     * @param apiClient
     *                  ApiClient to invoke the API on
     */
    @Beta
    public AdaptiveCardApi(@Nonnull final ApiClient apiClient) {
        super(apiClient);
    }

    /**
     * <p>
     * Send to adaptive Card
     * </p>
     * <p>
     * </p>
     * <p>
     * <b>201</b> - Created
     * 
     * @param postAdaptiveCardRequest
     *                                The value for the parameter
     *                                postAdaptiveCardRequest
     * @return An OpenApiResponse containing the status code of the HttpResponse.
     * @throws OpenApiRequestException if an error occurs while attempting to invoke
     *                                 the API
     */
    @Nonnull
    public OpenApiResponse postAdaptiveCard(@Nonnull final PostAdaptiveCardRequest postAdaptiveCardRequest)
            throws OpenApiRequestException {
        final Object localVarPostBody = postAdaptiveCardRequest;

        // verify the required parameter 'postAdaptiveCardRequest' is set
        if (postAdaptiveCardRequest == null) {
            throw new OpenApiRequestException(
                    "Missing the required parameter 'postAdaptiveCardRequest' when calling postAdaptiveCard");
        }

        final String localVarPath = UriComponentsBuilder.fromPath("/zoa").build().toUriString();

        final MultiValueMap<String, String> localVarQueryParams = new LinkedMultiValueMap<String, String>();
        final HttpHeaders localVarHeaderParams = new HttpHeaders();
        final MultiValueMap<String, Object> localVarFormParams = new LinkedMultiValueMap<String, Object>();

        final String[] localVarAccepts = { "application/json" };
        final List<MediaType> localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        final String[] localVarContentTypes = {
                "application/json"
        };
        final MediaType localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

        final String[] localVarAuthNames = new String[] {};

        final ParameterizedTypeReference<Void> localVarReturnType = new ParameterizedTypeReference<Void>() {
        };
        apiClient.invokeAPI(localVarPath, HttpMethod.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams,
                localVarFormParams, localVarAccept, localVarContentType, localVarAuthNames, localVarReturnType);
        return new OpenApiResponse(apiClient);
    }
}